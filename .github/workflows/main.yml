name: Action Practice


on:
  push:
  schedule:
    - cron: "0 16 * * *"

env:
  TZ: Asia/Shanghai

jobs:
  # a single job
  a-job-name:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python3
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install requirements
        run: |
          python3 -m pip install --upgrade pip
          pip3 install requests beautifulsoup4 lxml
      - name: Run
        run: python3 ./script.py
      - name: Check for changes
        id: changes
        run: echo ::set-output name=changed::$(git status --porcelain)
      - name: Commit
        if: steps.changes.outputs.changed != ''
        env:
          GIT_NAME: GitHub Actions[Bot]
          GIT_EMAIL: 41898282+github-actions[bot]@users.noreply.github.com
        
        run: |
          git config --local user.name $GIT_NAME
          git config --local user.email $GIT_EMAIL
          git pull
          git push origin master
          
          git reset --mixed master
          git add .
          git commit -m "Github action update at `date '+%Y-%m-%d %H:%M:%S'`."
          git push
          
      
          
      - name: huggingpush
        uses: nateraw/huggingface-sync-action@v0.0.5
        with:
  # The github repo you are syncing from. Required.
         github_repo_id: ''

  # The Hugging Face repo id you want to sync to. (ex. 'username/reponame')
  # A repo with this name will be created if it doesn't exist. Required.
         huggingface_repo_id: ''

  # Hugging Face token with write access. Required.
  # Here, we provide a token that we called `HF_TOKEN` when we added the secret to our GitHub repo.
         hf_token: ${{ secrets.HF_TOKEN }}

  # The type of repo you are syncing to: model, dataset, or space.
  # Defaults to space.
         repo_type: 'space'
  
  # If true and the Hugging Face repo doesn't already exist, it will be created
  # as a private repo.
  #
  # Note: this param has no effect if the repo already exists.
         private: false

  # If repo type is space, specify a space_sdk. One of: streamlit, gradio, or static
  #
  # This option is especially important if the repo has not been created yet.
  # It won't really be used if the repo already exists.
         space_sdk: 'gradio'
  
  # If provided, subdirectory will determine which directory of the repo will be synced.
  # By default, this action syncs the entire GitHub repo.
  #
  # An example using this option can be seen here:
  # https://github.com/huggingface/fuego/blob/830ed98/.github/workflows/sync-with-huggingface.yml
         subdirectory: ''
      
           
          
          
